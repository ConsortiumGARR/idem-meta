<?xml version="1.0" encoding="UTF-8"?>
<!--
    Common beans for this channel.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"> 

    <!--
        Fetch the production aggregate.
    -->
    <bean id="at_aconet_productionAggregate" class="net.shibboleth.metadata.dom.DomResourceSourceStage"
        init-method="initialize" lazy-init="true">
        <property name="id" value="at_aconet_productionAggregate"/>
        <property name="parserPool" ref="parserPool"/>
        <property name="domResource">
            <bean class="org.opensaml.util.net.HttpResource">
                <constructor-arg name="client" ref="httpClient"/>
                <constructor-arg name="url" value="http://wayf.aco.net/aconet-aai-metadata.xml"/>
            </bean>
        </property>
    </bean>
    
    <!--
        Signing certificate.
    -->
    <bean id="at_aconet_signingCertificate" class="net.shibboleth.ext.spring.factory.X509CertificateFactoryBean"
        lazy-init="true">
        <property name="certificateFile">
            <bean class="java.io.File">
                <constructor-arg value="#{ systemProperties['basedir'] }/mdx/at_aconet/aconet-aai-metadata-signing.crt"/>
            </bean>
        </property>
    </bean>
    
    <!--
        Check signing signature.
    -->
    <bean id="at_aconet_checkSignature" class="net.shibboleth.metadata.dom.XMLSignatureValidationStage"
        init-method="initialize" lazy-init="true">
        <property name="id" value="at_aconet_checkSignature"/>
        <property name="verificationCertificate" ref="at_aconet_signingCertificate"/>
    </bean>
    
    <!--
        Fetch and process the exported entities as a collection.
    -->
    <bean id="at_aconet_exportedEntities" class="net.shibboleth.metadata.pipeline.CompositeStage"
        init-method="initialize" lazy-init="true">
        <property name="id" value="at_aconet_exportedEntities"/>
        <property name="composedStages">
            <list>
                <!-- no export aggregate; use the production one instead -->
                <ref bean="at_aconet_productionAggregate"/>
                
                <!--
                    Check for fatal errors at the aggregate level:
                        missing or expired validUntil attribute
                        invalid signature
                -->
                <ref bean="check_validUntil"/>
                <ref bean="at_aconet_checkSignature"/>
                <ref bean="errorTerminatingFilter"/>
                
                <ref bean="disassemble"/>
                
                <ref bean="standardImportActions"/>
            </list>
        </property>
    </bean>
    
</beans>
