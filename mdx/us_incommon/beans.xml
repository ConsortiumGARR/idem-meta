<?xml version="1.0" encoding="UTF-8"?>
<!--
    Common beans for this channel.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    default-lazy-init="true"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
    
    <!--
        Location of various resources.
    -->
    <bean id="us_incommon_productionAggregate_url" class="java.lang.String">
        <constructor-arg value="http://wayf.incommonfederation.org/InCommon/InCommon-metadata.xml"/>
    </bean>
    
    <!--
        Fetch the production aggregate.
    -->
    <bean id="us_incommon_productionAggregate" parent="domResourceStage_parent"
        p:id="us_incommon_productionAggregate">
        <property name="domResource">
            <bean class="net.shibboleth.utilities.java.support.httpclient.HttpResource">
                <constructor-arg name="client" ref="httpClient"/>
                <constructor-arg name="url"    ref="us_incommon_productionAggregate_url"/>
            </bean>
        </property>
    </bean>
    
    <!--
        InCommon signing certificate.
    -->
    <bean id="us_incommon_signingCertificate" class="net.shibboleth.ext.spring.factory.X509CertificateFactoryBean">
        <property name="certificateFile">
            <bean class="java.io.File">
                <constructor-arg value="#{ systemProperties['basedir'] }/mdx/us_incommon/incommon.pem"/>
            </bean>
        </property>
    </bean>
    
    <!--
        Check InCommon signing signature.
    -->
    <bean id="us_incommon_checkSignature" parent="stage_parent"
        class="net.shibboleth.metadata.dom.XMLSignatureValidationStage"
        p:id="us_incommon_checkSignature">
        <property name="verificationCertificate" ref="us_incommon_signingCertificate"/>
    </bean>

    <!--
        us_incommon_registrar
        
        Unique ID for the registrar associated with this channel.
        
        TODO confirm this value with InCommon
    -->
    <bean id="us_incommon_registrar" class="java.lang.String">
        <constructor-arg value="urn:mace:incommon"/>
    </bean>
    
    <!--
        us_incommon_check_regauth
        
        Any registrationAuthority already present on an entity in this
        channel must match the known registration authority value.
    -->
    <bean id="us_incommon_check_regauth" parent="check_regauth_parent"
        p:id="us_incommon_check_regauth">
        <property name="transformParameters">
            <map>
                <entry key="expectedAuthority" value-ref="us_incommon_registrar"/>
            </map>
        </property>
    </bean>
    
    <!--
        us_incommon_default_regauth
        
        Provide a default registrationAuthority appropriate to
        this channel.
    -->
    <bean id="us_incommon_default_regauth" parent="default_regauth_parent"
        p:id="us_incommon_default_regauth">
        <property name="transformParameters">
            <map>
                <entry key="defaultAuthority" value-ref="us_incommon_registrar"/>
            </map>
        </property>
    </bean>
    
    <!--
        Fetch and process the production entities as a collection.
    -->
    <bean id="us_incommon_productionEntities" parent="composite_parent"
        p:id="us_incommon_productionEntities">
        <property name="composedStages">
            <list>
                <ref bean="us_incommon_productionAggregate"/>

                <!--
                    Check for fatal errors at the aggregate level:
                        missing or expired validUntil attribute
                        invalid signature
                -->
                <ref bean="check_validUntil"/>
                <ref bean="us_incommon_checkSignature"/>
                <ref bean="errorTerminatingFilter"/>
                
                <ref bean="disassemble"/>
                
                <ref bean="us_incommon_check_regauth"/>
                <ref bean="standardImportActions"/>
            </list>
        </property>
    </bean>
    
    <!--
        Filter out all entities not involved in the pilot.
    -->
    <bean id="us_incommon_pilot_filterEntities" parent="stage_parent"
        class="net.shibboleth.metadata.dom.saml.EntityFilterStage"
        p:id="us_incommon_pilot_filterEntities"
        p:whitelistingEntities="true">
        <property name="designatedEntities">
            <set>
                <value>https://wiki.ligo.org/shibboleth-sp</value>
            </set>
        </property>
    </bean>
    
    <!--
        Synthesise an export collection by filtering the production entities.
    -->
    <bean id="us_incommon_exportedEntities" parent="composite_parent"
        p:id="us_incommon_exportedEntities">
        <property name="composedStages">
            <list>
                <ref bean="us_incommon_productionAggregate"/>
                
                <!--
                    Check for fatal errors at the aggregate level:
                        missing or expired validUntil attribute
                        invalid signature
                -->
                <ref bean="check_validUntil"/>
                <ref bean="us_incommon_checkSignature"/>
                <ref bean="errorTerminatingFilter"/>
                
                <ref bean="disassemble"/>
                
                <!-- filter out anything we don't want -->
                <ref bean="us_incommon_pilot_filterEntities"/>
                
                <!-- default and check registrar -->
                <ref bean="us_incommon_default_regauth"/>
                <ref bean="us_incommon_check_regauth"/>

                <!--
                    Unfortunately in this case, the "standard" import actions will remove all
                    entity attributes, and we wish to keep some of the InCommon category
                    designations.
                    
                    TODO This will mean unbundling standardImportActions everywhere
                    it is currently used.
                -->
                <ref bean="standardImportActions"/>
            </list>
        </property>
    </bean>
    
    <!--
        Fake an export aggregate by aggregating the exported entities.
    -->
    <bean id="us_incommon_exportedAggregate" parent="composite_parent"
        p:id="us_incommon_exportedAggregate">
        <property name="composedStages">
            <list>
                <ref bean="us_incommon_exportedEntities"/>
                <ref bean="assemble"/>
            </list>
        </property>
    </bean>

</beans>
