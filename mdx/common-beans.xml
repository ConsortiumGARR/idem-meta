<?xml version="1.0" encoding="UTF-8"?>
<!--
    Common bean definitions.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    default-lazy-init="true"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <!--
        ***********************************
        ***                             ***
        ***   P A R E N T   B E A N S   ***
        ***                             ***
        ***********************************
    -->
    
    <!--
        component_parent
        
        Parent for anything based on the component system.
        These all require initialization before use.
    -->
    <bean id="component_parent" abstract="true" init-method="initialize"/>
    
    <!--
        file_parent
        
        Parent for all file system resource beans.
    -->
    <bean id="file_parent" abstract="true" parent="component_parent"
        class="net.shibboleth.utilities.java.support.resource.FilesystemResource"/>

    <!--
        pipeline_parent
        
        Parent for pipelines.
    -->
    <bean id="pipeline_parent" abstract="true" parent="component_parent"
        class="net.shibboleth.metadata.pipeline.SimplePipeline"/>
    
    <!--
        stage_parent
        
        Parent for all stages.
    -->
    <bean id="stage_parent" abstract="true" parent="component_parent"/>
    
    <!--
        composite_parent
        
        Parent for composite stages.
    -->
    <bean id="composite_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.pipeline.CompositeStage"/>

    <!--
        xslt_parent
        
        Parent for XSLT-based checking stages.
    -->
    <bean id="xslt_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.dom.XSLTransformationStage"/>
    
    <!--
        check_xslt_parent
        
        Parent for XSLT-based checking stages.
    -->
    <bean id="check_xslt_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.dom.XSLValidationStage"/>
    
    <!--
        stripContainer_parent
        
        Parent for container stripping stages.
    -->
    <bean id="stripContainer_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.dom.EmptyContainerStrippingStage"/>
    
    <!--
        stripElement_parent
        
        Parent for element stripping stages.
    -->
    <bean id="stripElement_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.dom.ElementStrippingStage"/>
    
    <!--
        stripNamespace_parent
        
        Parent for namespace stripping stages.
    -->
    <bean id="stripNamespace_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.dom.NamespaceStrippingStage"/>

    <!--
        domFileStage_parent
        
        Parent for DOM filesystem source stages.
    -->
    <bean id="domFileStage_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.dom.DomFilesystemSourceStage">
        <property name="parserPool" ref="parserPool"/>
    </bean>

    <!--
        domResourceStage_parent
        
        Parent for DOM resource source stages.
    -->
    <bean id="domResourceStage_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.dom.DomResourceSourceStage">
        <property name="parserPool" ref="parserPool"/>
    </bean>

    <!--
        serialize_parent
        
        Parent for serialization stages.
    -->
    <bean id="serialize_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.pipeline.SerializationStage">
        <property name="serializer" ref="serializer"/>
    </bean>
    
    <!--
        merge_parent
        
        Parent for merge stages.  Defaults strategy to deduplication.
    -->
    <bean id="merge_parent" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.pipeline.PipelineMergeStage">
        <property name="collectionMergeStrategy" ref="deduplicateMergeStrategy"/>
    </bean>
    
    <!--
        ***********************************************
        ***                                         ***
        ***   N A M E S P A C E   H A N D L I N G   ***
        ***                                         ***
        ***********************************************
    -->
    
    <!--
        commonNamespaces
        
        A NamespaceContext that assigns the usual prefix for each of the commonly used XML namespaces.
        This is used in the evaluation of XPath expressions.
    -->
    <bean id="commonNamespaces" class="net.shibboleth.utilities.java.support.xml.SimpleNamespaceContext">
        <constructor-arg>
            <util:map map-class="java.util.HashMap">
                <entry key="alg"        value="urn:oasis:names:tc:SAML:metadata:algsupport"/>
                <entry key="ds"         value="http://www.w3.org/2000/09/xmldsig#"/>
                <entry key="dsig11"     value="http://www.w3.org/2009/xmldsig11#"/>
                <entry key="elab"       value="http://eduserv.org.uk/labels"/>
                <entry key="idpdisc"    value="urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol"/>
                <entry key="init"       value="urn:oasis:names:tc:SAML:profiles:SSO:request-init"/>
                <entry key="md"         value="urn:oasis:names:tc:SAML:2.0:metadata"/>
                <entry key="mdattr"     value="urn:oasis:names:tc:SAML:metadata:attribute"/>
                <entry key="mdrpi"      value="urn:oasis:names:tc:SAML:metadata:rpi"/>
                <entry key="mdui"       value="urn:oasis:names:tc:SAML:metadata:ui"/>
                <entry key="saml"       value="urn:oasis:names:tc:SAML:2.0:assertion"/>
                <entry key="samlp"      value="urn:oasis:names:tc:SAML:2.0:protocol"/>
                <entry key="shibmd"     value="urn:mace:shibboleth:metadata:1.0"/>
                <entry key="ukfedlabel" value="http://ukfederation.org.uk/2006/11/label"/>
                <entry key="wayf"       value="http://sdss.ac.uk/2006/06/WAYF"/>
                <entry key="xenc"       value="http://www.w3.org/2001/04/xmlenc#"/>
                <entry key="xenc11"     value="http://www.w3.org/2009/xmlenc11#"/>
                <entry key="xs"         value="http://www.w3.org/2001/XMLSchema"/>
                <entry key="xsi"        value="http://www.w3.org/2001/XMLSchema-instance"/>
                <entry key="xsl"        value="http://www.w3.org/1999/XSL/Transform"/>
            </util:map>
        </constructor-arg>
    </bean>
    
    <!--
        stripElabNamespace
        
        Remove the Eduserv label namespace.
    -->
    <bean id="stripElabNamespace" parent="stripNamespace_parent"
        p:id="stripElabNamespace"
        p:namespace="http://eduserv.org.uk/labels"/>

    <!--
        stripMdattrNamespace
        
        Remove the namespace used by the entity attributes extension.
    -->
    <bean id="stripMdattrNamespace" parent="stripNamespace_parent"
        p:id="stripMdattrNamespace"
        p:namespace="urn:oasis:names:tc:SAML:metadata:attribute"/>
    
    <!--
        stripMdrpiNamespace
        
        Remove the namespace used by the registration and publication metdata extension.
    -->
    <bean id="stripMdrpiNamespace" parent="stripNamespace_parent"
        p:id="stripMdrpiNamespace"
        p:namespace="urn:oasis:names:tc:SAML:metadata:rpi"/>
    
    <!--
        stripUkfedlabelNamespace
        
        Remove the UK federation label namespace.
    -->
    <bean id="stripUkfedlabelNamespace" parent="stripNamespace_parent"
        p:id="stripUkfedlabelNamespace"
        p:namespace="http://ukfederation.org.uk/2006/11/label"/>
    
    <!--
        stripWayfNamespace
        
        Remove the UK federation WAYF namespace.
    -->
    <bean id="stripWayfNamespace" parent="stripNamespace_parent"
        p:id="stripWayfNamespace"
        p:namespace="http://sdss.ac.uk/2006/06/WAYF"/>
    
    <!--
        normaliseNamespaces
        
        A pipeline stage that can be used before serialisation to normalise the namespaces
        used in an XML document.
    -->
    <bean id="normaliseNamespaces" parent="xslt_parent"
        p:id="normaliseNamespaces">
        <property name="xslResource">
            <bean parent="file_parent">
                <constructor-arg value="#{ systemProperties['basedir'] }/mdx/ns_norm.xsl"/>
            </bean>
        </property>
    </bean>
    
    <!--
        ***************************************************
        ***                                             ***
        ***   V A L I D A T I O N   F R A M E W O R K   ***
        ***                                             ***
        ***************************************************
    -->
    
    <!--
        Import beans that perform individual validation checks.
    -->
    <import resource="validation-beans.xml"/>
    
    <!--
        identifierStrategy
        
        Standard item identifier strategy.
    -->
    <bean id="identifierStrategy" class="uk.org.ukfederation.mda.UKItemIdentificationStrategy"/>
    
    <!--
        errorAnnouncer
        
        A pipeline stage that logs any errors and warnings present,
        but takes no action on them.
    -->
    <bean id="errorAnnouncer" parent="stage_parent"
        class="net.shibboleth.metadata.pipeline.StatusMetadataLoggingStage"
        p:id="errorAnnouncer">
        <property name="identifierStrategy" ref="identifierStrategy"/>
        <property name="selectionRequirements">
            <list>
                <value>#{T(net.shibboleth.metadata.ErrorStatus)}</value>
                <value>#{T(net.shibboleth.metadata.WarningStatus)}</value>
            </list>
        </property>
    </bean>
    
    <!--
        errorRemover
        
        This pipeline stage removes any items marked with an error status.
    -->
    <bean id="errorRemover" parent="stage_parent"
        class="net.shibboleth.metadata.pipeline.ItemMetadataFilterStage"
        p:id="errorRemover">
        <property name="identifierStrategy" ref="identifierStrategy"/>
        <property name="selectionRequirements">
            <list>
                <value>#{T(net.shibboleth.metadata.ErrorStatus)}</value>
            </list>
        </property>
    </bean>
    
    <!--
        errorTerminator
        
        This pipeline stage causes CLI termination if any item is marked with an error status.
    -->
    <bean id="errorTerminator" parent="stage_parent"
        class="net.shibboleth.metadata.pipeline.ItemMetadataTerminationStage"
        p:id="errorTerminator">
        <property name="identifierStrategy" ref="identifierStrategy"/>
        <property name="selectionRequirements">
            <list>
                <value>#{T(net.shibboleth.metadata.ErrorStatus)}</value>
            </list>
        </property>
    </bean>
    
    <!--
        errorAnnouncingFilter
        
        Announce any errors or warnings encountered, then remove
        any items that had errors.  Items with warnings are retained.
    -->
    <bean id="errorAnnouncingFilter" parent="composite_parent"
        p:id="errorAnnouncingFilter">
        <property name="composedStages">
            <list>
                <ref bean="errorAnnouncer"/>
                <ref bean="errorRemover"/>
            </list>
        </property>
    </bean>
    
    <!--
        errorTerminatingFilter
        
        A pipeline stage that checks for any errors, and then announces
        and filters any encountered.
    -->
    <bean id="errorTerminatingFilter" parent="composite_parent"
        p:id="errorTerminatingFilter">
        <property name="composedStages">
            <list>
                <ref bean="errorAnnouncer"/>
                <ref bean="errorTerminator"/>
            </list>
        </property>
    </bean>
    
    <!--
        *************************************************
        ***                                           ***
        ***   M D R P I   S P E C I F I C A T I O N   ***
        ***                                           ***
        *************************************************
    -->
    
    <!--
        default_regauth_parent
        
        Parent (template) for per-channel beans.
        
        Any registrationAuthority already present on an entity in this
        channel must match the known registration authority value.
    -->
    <bean id="default_regauth_parent" abstract="true" parent="xslt_parent">
        <property name="xslResource">
            <bean parent="file_parent">
                <constructor-arg value="#{ systemProperties['basedir'] }/mdx/default_regauth.xsl"/>
            </bean>
        </property>
    </bean>
    
    <!--
        *********************
        ***               ***
        ***   ( E N D )   ***
        ***               ***
        *********************
    -->
    
    <!--
        httpClient
        
        Common, basic, HTTP client for use with HTTP resources.
    -->
    <bean name="httpClient" class="org.apache.http.impl.client.DefaultHttpClient"/>
    
    <!--
        parserPool
        
        A pre-configured parser pool for use by source stages.
    -->
    <bean id="parserPool" parent="component_parent"
        class="net.shibboleth.utilities.java.support.xml.BasicParserPool"
        p:ignoreComments="false"
        p:ignoreElementContentWhitespace="false"/>
    
    <!--
        schemaResources
        
        A list of all schema documents that we make common use of.
    -->
    <util:list id="schemaResources">
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/MetadataExchange.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/oasis-200401-wss-wssecurity-secext-1.0.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/oasis-200401-wss-wssecurity-utility-1.0.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/saml-metadata-rpi-v1.0.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/saml-schema-assertion-2.0.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/saml-schema-metadata-2.0.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/shibboleth-metadata-1.0.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-metadata-attr.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-request-initiation.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-saml-idp-discovery.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-saml-metadata-algsupport-v1.0.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-saml-metadata-ui-v1.0.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/uk-fed-label.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/ukfederation-members.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/ws-addr.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/ws-authorization.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/ws-federation.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/ws-securitypolicy-1.2.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/xenc-schema.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/xenc-schema-11.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/xml.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/xmldsig-core-schema.xsd"/>
        </bean>
        <bean parent="file_parent">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/xmldsig11-schema.xsd"/>
        </bean>
    </util:list>
    
    <!--
        checkSchemas
        
        A pipeline stage that checks against all the common schemas, as above.
    -->
    <bean id="checkSchemas" parent="stage_parent"
        class="net.shibboleth.metadata.dom.XMLSchemaValidationStage"
        p:id="checkSchemas">
        <property name="schemaResources" ref="schemaResources"/>
    </bean>

    <!--
        cleanImport
        
        A pipeline stage that can be used in an import pipeline to clean up the metadata
        presented, for example by removing redundant attributes or elements which only have
        meaning when added by the UK federation registrar.
    -->
    <bean id="cleanImport" parent="xslt_parent"
        p:id="cleanImport">
        <property name="xslResource">
            <bean parent="file_parent">
                <constructor-arg value="#{ systemProperties['basedir'] }/mdx/clean-import.xsl"/>
            </bean>
        </property>
    </bean>
    
    <!--
        Basic EntitiesDescriptor disassembler pipeline stage.
    -->
    <bean id="disassemble" parent="stage_parent"
        class="net.shibboleth.metadata.dom.saml.EntitiesDescriptorDisassemblerStage"
        p:id="disassemble"/>
    
    <!--
        Populate ItemId values from entities.
    -->
    <bean id="populateItemIds" parent="stage_parent"
        class="net.shibboleth.metadata.dom.saml.EntityDescriptorItemIdPopulationStage"
        p:id="populateItemIds"/>
    
    <!--
        stripKeyNames
        
        Remove all ds:KeyName elements.
    -->
    <bean id="stripKeyNames" parent="stripElement_parent"
        p:id="stripKeyNames"
        p:elementName="KeyName"
        p:elementNamespace="http://www.w3.org/2000/09/xmldsig#"/>
    
    <!--
        Remove any empty Extensions elements.
    -->
    <bean id="removeEmptyExtensions" parent="stripContainer_parent"
        p:id="removeEmptyExtensions"
        p:elementName="Extensions"
        p:elementNamespace="urn:oasis:names:tc:SAML:2.0:metadata"/>
    
    <!--
        standardImportActions
        
        Standard actions performed on any metadata import channel.  Assumes that the
        collection has been acquired, had its signature validated, and disassembled into
        individual entities.
    -->
    <bean id="standardImportActions" parent="composite_parent"
        p:id="standardImportActions">
        <property name="composedStages">
            <list>
                <ref bean="populateItemIds"/>

                <!--
                    The following three namespaces are always stripped because they are
                    specific to the UK registrar and can't be valid when imported from
                    some other source.
                -->
                <ref bean="stripElabNamespace"/>
                <ref bean="stripUkfedlabelNamespace"/>
                <ref bean="stripWayfNamespace"/>
                
                <ref bean="cleanImport"/>
                <ref bean="removeEmptyExtensions"/>
                <ref bean="checkSchemas"/>
                <ref bean="CHECK_imported"/>
                <ref bean="errorAnnouncingFilter"/>
                
                <!--
                    Strip the namespace used by the entity attribute namespace for now.
                    This needs to be replaced in the long run by per-channel handling that
                    lets through those attributes which we have verified that the source
                    validates in the same way we do, or those which we don't care about.
                    
                    This namespace is stripped after the checks to allow for the
                    entity attributes to be checked before they are discarded.
                -->
                <ref bean="stripMdattrNamespace"/>
            </list>
        </property>
    </bean>
    
    <!--
        Basic EntitiesDescriptor assembler pipeline stage.
    -->
    <bean id="assemble" parent="stage_parent"
        class="net.shibboleth.metadata.dom.saml.EntitiesDescriptorAssemblerStage"
        p:id="assemble"/>
    
    <!--
        standardImportTail
        
        Standard actions performed at the end of any metadata import flow.  As imports
        are currently ending up in files, build an EntitiesDescriptor and normalise the
        namespaces in the document ready for serialisation.
    -->
    <bean id="standardImportTail" parent="composite_parent"
        p:id="standardImportTail">
        <property name="composedStages">
            <list>
                <ref bean="assemble"/>
                <ref bean="normaliseNamespaces"/>
            </list>
        </property>
    </bean>
    
    <!--
        everythingSelector
        
        An item selection strategy that selects all items.
    -->
    <bean id="everythingSelector" class="com.google.common.base.Predicates"
        factory-method="alwaysTrue"/>
    
    <!--
        Standard serializer.
    -->
    <bean id="serializer" class="net.shibboleth.metadata.dom.DomElementSerializer"/>
    
    <!--
        Merge strategy that removes duplicates.
    -->
    <bean id="deduplicateMergeStrategy" class="net.shibboleth.metadata.DeduplicatingItemIdMergeStrategy"/>
    
</beans>
