<?xml version="1.0" encoding="UTF-8"?>
<!--
    Common bean definitions.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <!--
        parserPool
        
        A pre-configured parser pool for use by source stages.
    -->
    <bean id="parserPool" class="org.opensaml.util.xml.BasicParserPool" init-method="initialize">
        <property name="ignoreComments" value="false"/>
        <property name="ignoreElementContentWhitespace" value="false"/>
    </bean>
    
    <!--
        commonNamespaces
        
        A map that assigns the usual prefix for each of the commonly used XML namespaces.
        This is used in the evaluation of XPath expressions.
    -->
    <util:map id="commonNamespaces" map-class="java.util.HashMap">
        <entry key="ds"         value="http://www.w3.org/2000/09/xmldsig#"/>
        <entry key="elab"       value="http://eduserv.org.uk/labels"/>
        <entry key="idpdisc"    value="urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol"/>
        <entry key="init"       value="urn:oasis:names:tc:SAML:profiles:SSO:request-init"/>
        <entry key="md"         value="urn:oasis:names:tc:SAML:2.0:metadata"/>
        <entry key="mdrpi"      value="urn:oasis:names:tc:SAML:metadata:rpi"/>
        <entry key="mdui"       value="urn:oasis:names:tc:SAML:metadata:ui"/>
        <entry key="saml"       value="urn:oasis:names:tc:SAML:2.0:assertion"/>
        <entry key="shibmd"     value="urn:mace:shibboleth:metadata:1.0"/>
        <entry key="ukfedlabel" value="http://ukfederation.org.uk/2006/11/label"/>
        <entry key="wayf"       value="http://sdss.ac.uk/2006/06/WAYF"/>
        <entry key="xenc"       value="http://www.w3.org/2001/04/xmlenc#"/>
        <entry key="xsi"        value="http://www.w3.org/2001/XMLSchema-instance"/>
        <entry key="xsl"        value="http://www.w3.org/1999/XSL/Transform"/>
    </util:map>

    <!--
        schemaResources
        
        A list of all schema documents that we make common use of.
    -->
    <util:list id="schemaResources">
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/saml-metadata-rpi-v1.0-wd05.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/saml-schema-assertion-2.0.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/saml-schema-metadata-2.0.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/shibboleth-metadata-1.0.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-metadata-attr.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-request-initiation.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-saml-idp-discovery.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-saml-metadata-algsupport-v1.0.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-saml-metadata-ui-v1.0.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-saml-schema-assertion-2.0.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/sstc-saml-schema-metadata-2.0.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/uk-fed-label.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/ukfederation-members.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/xenc-schema.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/xml.xsd"/>
        </bean>
        <bean class="org.opensaml.util.resource.FilesystemResource">
            <constructor-arg value="#{ systemProperties['basedir'] }/xml/xmldsig-core-schema.xsd"/>
        </bean>
    </util:list>
    
    <!--
        checkSchemas
        
        A pipeline stage that checks against all the common schemas, as above, and then announces
        and filters any errors encountered.
    -->
    <bean id="checkSchemas" class="net.shibboleth.metadata.dom.stage.XMLSchemaValidationStage">
        <property name="id" value="checkSchemas"/>
        <property name="schemaResources" ref="schemaResources"/>
        <property name="postProcessFilter">
            <bean class="uk.org.ukfederation.mda.ErrorAnnouncingFilteringStrategy"/>
        </property>
    </bean>
    
    <!--
        cleanImport
        
        A pipeline stage that can be used in an import pipeline to clean up the metadata
        presented, for example by removing redundant attributes or elements which only have
        meaning when added by the UK federation registrar.
    -->
    <bean id="cleanImport" class="net.shibboleth.metadata.dom.stage.XSLTStage">
        <property name="id" value="cleanImport"/>
        <property name="xslResource">
            <bean class="org.opensaml.util.resource.FilesystemResource">
                <constructor-arg value="#{ systemProperties['basedir'] }/feds/clean_import.xsl"/>
            </bean>
        </property>
    </bean>
    
    <!--
        <bean id="members" class="uk.org.ukfederation.members.Members">
            <constructor-arg>
                <bean class="java.io.File">
                    <constructor-arg value="#{ systemProperties['basedir'] }/xml/members.xml"/>
                </bean>
            </constructor-arg>
        </bean>
    -->
        
</beans>
